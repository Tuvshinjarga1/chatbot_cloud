"use client";

import React, { useEffect, useState } from "react";

// Chatwoot SDK-–∏–π–Ω —Ç”©—Ä–ª“Ø“Ø–¥–∏–π–≥ —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ—Ö
declare global {
  interface Window {
    chatwootSDK?: {
      run: (config: any) => void;
      toggle: (action: string) => void;
      setCustomAttributes: (data: any) => void;
    };
    $chatwoot?: {
      toggle: (action: string) => void;
      setCustomAttributes: (data: any) => void;
    };
  }
}

interface StatusType {
  message: string;
  type: "info" | "success" | "error";
}

interface ChatbotWidgetProps {
  isOpen?: boolean;
  onToggle?: () => void;
}

const ChatwootWidget: React.FC<ChatbotWidgetProps> = ({ isOpen, onToggle }) => {
  const [status, setStatus] = useState<StatusType>({
    message: "Chatwoot SDK –∞—á–∞–∞–ª–∂ –±–∞–π–Ω–∞...",
    type: "info",
  });

  const updateStatus = (
    message: string,
    type: "info" | "success" | "error" = "info"
  ) => {
    setStatus({ message, type });
    console.log(`üìä Status: ${message} (${type})`);
  };

  const testChatwootWidget = () => {
    console.log("üîß Widget –Ω—ç—ç—Ö –æ—Ä–æ–ª–¥–ª–æ–≥–æ...");

    if (window.chatwootSDK) {
      try {
        // ”®”©—Ä ”©”©—Ä –∞—Ä–≥–∞ –æ—Ä–æ–ª–¥–æ—Ö
        if (window.$chatwoot && window.$chatwoot.toggle) {
          window.$chatwoot.toggle("open");
          console.log("‚úÖ $chatwoot.toggle() –∞—à–∏–≥–ª–∞–Ω –Ω—ç—ç–ª—ç—ç");
        } else if (window.chatwootSDK.toggle) {
          window.chatwootSDK.toggle("open");
          console.log("‚úÖ chatwootSDK.toggle() –∞—à–∏–≥–ª–∞–Ω –Ω—ç—ç–ª—ç—ç");
        } else {
          console.warn("‚ö†Ô∏è Toggle —Ñ—É–Ω–∫—Ü –æ–ª–¥—Å–æ–Ω–≥“Ø–π");
          updateStatus("Widget toggle —Ñ—É–Ω–∫—Ü –æ–ª–¥—Å–æ–Ω–≥“Ø–π!", "error");
          return;
        }

        updateStatus("Chatwoot widget –Ω—ç—ç—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç!", "success");
      } catch (error: any) {
        console.error("‚ùå Widget –Ω—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞:", error);
        updateStatus("Widget –Ω—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞: " + error.message, "error");
      }
    } else {
      console.error("‚ùå Chatwoot SDK –∞—á–∞–∞–ª–∞–≥–¥–∞–∞–≥“Ø–π –±–∞–π–Ω–∞");
      updateStatus(
        "Chatwoot SDK –∞—á–∞–∞–ª–∞–≥–¥–∞–∞–≥“Ø–π –±–∞–π–Ω–∞! –•—É—É–¥—Å—ã–≥ –¥–∞—Ö–∏–Ω –∞—á–∞–∞–ª–∞–Ω–∞ —É—É.",
        "error"
      );
    }
  };

  const testWithCustomData = () => {
    console.log("üîß Custom data-—Ç–∞–π widget –Ω—ç—ç—Ö –æ—Ä–æ–ª–¥–ª–æ–≥–æ...");

    if (window.chatwootSDK || window.$chatwoot) {
      try {
        const customData = {
          userId: "test-user-" + Date.now(),
          source: "test-page",
          testMode: true,
          timestamp: new Date().toISOString(),
          userAgent: navigator.userAgent,
        };

        console.log("üìù Custom data:", customData);

        // Custom attributes —Ç–æ—Ö–∏—Ä—É—É–ª–∞—Ö
        if (window.$chatwoot && window.$chatwoot.setCustomAttributes) {
          window.$chatwoot.setCustomAttributes(customData);
        } else if (
          window.chatwootSDK &&
          window.chatwootSDK.setCustomAttributes
        ) {
          window.chatwootSDK.setCustomAttributes(customData);
        }

        // Widget –Ω—ç—ç—Ö
        if (window.$chatwoot && window.$chatwoot.toggle) {
          window.$chatwoot.toggle("open");
        } else if (window.chatwootSDK && window.chatwootSDK.toggle) {
          window.chatwootSDK.toggle("open");
        }

        updateStatus("Custom data-—Ç–∞–π widget –Ω—ç—ç–≥–¥–ª—ç—ç!", "success");
      } catch (error: any) {
        console.error("‚ùå Custom data —Ç–æ—Ö–∏—Ä—É—É–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞:", error);
        updateStatus(
          "Custom data —Ç–æ—Ö–∏—Ä—É—É–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞: " + error.message,
          "error"
        );
      }
    } else {
      updateStatus("Chatwoot SDK –∞—á–∞–∞–ª–∞–≥–¥–∞–∞–≥“Ø–π –±–∞–π–Ω–∞!", "error");
    }
  };

  const checkSDKStatus = () => {
    console.log("üîç SDK —Å—Ç–∞—Ç—É—Å —à–∞–ª–≥–∞–∂ –±–∞–π–Ω–∞...");

    const checks = {
      "window.chatwootSDK": !!window.chatwootSDK,
      "window.$chatwoot": !!window.$chatwoot,
      "chatwootSDK.toggle": !!(window.chatwootSDK && window.chatwootSDK.toggle),
      "$chatwoot.toggle": !!(window.$chatwoot && window.$chatwoot.toggle),
    };

    console.log("üìä SDK —à–∞–ª–≥–∞–ª—Ç—ã–Ω “Ø—Ä –¥“Ø–Ω:", checks);

    if (window.chatwootSDK || window.$chatwoot) {
      updateStatus(
        "‚úÖ Chatwoot SDK –±—ç–ª—ç–Ω –±–∞–π–Ω–∞! Console-–≥ –Ω—ç—ç–∂ –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª—ç–ª “Ø–∑–Ω—ç “Ø“Ø.",
        "success"
      );

      // Widget —ç–ª–µ–º–µ–Ω—Ç–∏–π–≥ DOM-–æ–æ—Å —Ö–∞–π—Ö
      const widgetElements = document.querySelectorAll(
        '[data-widget="chatwoot"], .woot-widget-holder, #chatwoot-widget'
      );
      console.log("üîç Widget —ç–ª–µ–º–µ–Ω—Ç“Ø“Ø–¥ DOM-–¥:", widgetElements);

      if (widgetElements.length > 0) {
        console.log("‚úÖ Widget —ç–ª–µ–º–µ–Ω—Ç“Ø“Ø–¥ DOM-–¥ –±–∞–π–Ω–∞");
      } else {
        console.warn("‚ö†Ô∏è Widget —ç–ª–µ–º–µ–Ω—Ç“Ø“Ø–¥ DOM-–¥ –æ–ª–¥—Å–æ–Ω–≥“Ø–π");
      }
    } else {
      updateStatus(
        "‚ùå Chatwoot SDK –∞—á–∞–∞–ª–∞–≥–¥–∞–∞–≥“Ø–π –±–∞–π–Ω–∞! Console-–≥ –Ω—ç—ç–∂ –∞–ª–¥–∞–∞–≥ —à–∞–ª–≥–∞–Ω–∞ —É—É.",
        "error"
      );
    }
  };

  useEffect(() => {
    // Debug –º—ç–¥—ç—ç–ª—ç–ª –Ω—ç–º—ç—Ö
    console.log("üöÄ Chatwoot SDK –∞—á–∞–∞–ª–∂ —ç—Ö—ç–ª–∂ –±–∞–π–Ω–∞...");

    const BASE_URL = "https://app.chatwoot.com";
    const script = document.createElement("script");
    script.src = BASE_URL + "/packs/js/sdk.js";
    script.defer = true;
    script.async = true;

    script.onload = () => {
      console.log("‚úÖ Chatwoot SDK script –∞—á–∞–∞–ª–∞–≥–¥–ª–∞–∞");

      // SDK –±—ç–ª—ç–Ω —ç—Å—ç—Ö–∏–π–≥ —à–∞–ª–≥–∞—Ö
      if (window.chatwootSDK) {
        console.log("‚úÖ chatwootSDK –æ–±—ä–µ–∫—Ç –æ–ª–¥–ª–æ–æ");

        try {
          window.chatwootSDK.run({
            websiteToken: "atrhYjQJmaBw5vCLzm5yTkHN",
            baseUrl: BASE_URL,
            locale: "mn",
            // –ù—ç–º—ç–ª—Ç —Ç–æ—Ö–∏—Ä–≥–æ–æ
            hideMessageBubble: false,
            position: "right",
            launcherTitle: "–ë–∏–¥—ç–Ω—Ç—ç–π —Ö–æ–ª–±–æ–≥–¥–æ—Ö",
          });

          console.log("‚úÖ Chatwoot SDK –∞–º–∂–∏–ª—Ç—Ç–∞–π —ç—Ö—ç–ª–ª—ç—ç");
          updateStatus(
            "Chatwoot SDK –∞–º–∂–∏–ª—Ç—Ç–∞–π –∞—á–∞–∞–ª–∞–≥–¥–ª–∞–∞! Widget —Ç–æ–≤—á–∏–π–≥ –¥–∞—Ä–∂ “Ø–∑–Ω—ç “Ø“Ø.",
            "success"
          );

          // Widget –±—ç–ª—ç–Ω —ç—Å—ç—Ö–∏–π–≥ —à–∞–ª–≥–∞—Ö
          setTimeout(() => {
            if (window.$chatwoot) {
              console.log("‚úÖ $chatwoot –æ–±—ä–µ–∫—Ç –±—ç–ª—ç–Ω –±–∞–π–Ω–∞");
              updateStatus(
                "Widget –±—ç–ª—ç–Ω –±–∞–π–Ω–∞! –¢–æ–≤—á–∏–π–≥ –¥–∞—Ä–∂ –Ω—ç—ç–Ω—ç “Ø“Ø.",
                "success"
              );
            } else {
              console.warn("‚ö†Ô∏è $chatwoot –æ–±—ä–µ–∫—Ç –æ–ª–¥—Å–æ–Ω–≥“Ø–π");
            }
          }, 2000);
        } catch (error: any) {
          console.error("‚ùå Chatwoot SDK —ç—Ö–ª“Ø“Ø–ª—ç—Ö—ç–¥ –∞–ª–¥–∞–∞:", error);
          updateStatus("SDK —ç—Ö–ª“Ø“Ø–ª—ç—Ö—ç–¥ –∞–ª–¥–∞–∞: " + error.message, "error");
        }
      } else {
        console.error("‚ùå chatwootSDK –æ–±—ä–µ–∫—Ç –æ–ª–¥—Å–æ–Ω–≥“Ø–π");
        updateStatus("chatwootSDK –æ–±—ä–µ–∫—Ç –æ–ª–¥—Å–æ–Ω–≥“Ø–π!", "error");
      }
    };

    script.onerror = (error) => {
      console.error("‚ùå Chatwoot SDK –∞—á–∞–∞–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞:", error);
      updateStatus(
        "Chatwoot SDK –∞—á–∞–∞–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞! –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Ö–æ–ª–±–æ–ª—Ç–æ–æ —à–∞–ª–≥–∞–Ω–∞ —É—É.",
        "error"
      );
    };

    // Timeout –Ω—ç–º—ç—Ö - 10 —Å–µ–∫—É–Ω–¥—ã–Ω –¥–∞—Ä–∞–∞ –∞—á–∞–∞–ª–∞–≥–¥–∞–∞–≥“Ø–π –±–æ–ª –∞–ª–¥–∞–∞
    const timeout = setTimeout(() => {
      if (!window.chatwootSDK) {
        console.error("‚ùå Chatwoot SDK 10 —Å–µ–∫—É–Ω–¥—ã–Ω –¥–æ—Ç–æ—Ä –∞—á–∞–∞–ª–∞–≥–¥—Å–∞–Ω–≥“Ø–π");
        updateStatus(
          "SDK –∞—á–∞–∞–ª–∞–≥–¥–∞—Ö–∞–¥ —Ö—ç—Ç —É–¥–∞–∂ –±–∞–π–Ω–∞. –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Ö–æ–ª–±–æ–ª—Ç–æ–æ —à–∞–ª–≥–∞–Ω–∞ —É—É.",
          "error"
        );
      }
    }, 10000);

    document.head.appendChild(script);

    // 3 —Å–µ–∫—É–Ω–¥—ã–Ω –¥–∞—Ä–∞–∞ —Å—Ç–∞—Ç—É—Å —à–∞–ª–≥–∞—Ö
    const statusCheck1 = setTimeout(checkSDKStatus, 3000);

    // 5 —Å–µ–∫—É–Ω–¥—ã–Ω –¥–∞—Ä–∞–∞ –¥–∞—Ö–∏–Ω —à–∞–ª–≥–∞—Ö
    const statusCheck2 = setTimeout(() => {
      console.log("üîÑ 5 —Å–µ–∫—É–Ω–¥—ã–Ω –¥–∞—Ä–∞–∞—Ö —à–∞–ª–≥–∞–ª—Ç...");
      checkSDKStatus();
    }, 5000);

    // Cleanup function
    return () => {
      clearTimeout(timeout);
      clearTimeout(statusCheck1);
      clearTimeout(statusCheck2);
      if (script.parentNode) {
        script.parentNode.removeChild(script);
      }
    };
  }, []);

  // –•—ç—Ä—ç–≤ isOpen –±–æ–ª–æ–Ω onToggle props –¥–∞–º–∂—É—É–ª–∞–≥–¥—Å–∞–Ω –±–æ–ª —ç–Ω–≥–∏–π–Ω toggle —Ç–æ–≤—á —Ö–∞—Ä—É—É–ª–∞—Ö
  if (isOpen !== undefined && onToggle) {
    return (
      <div
        className={`fixed bottom-4 right-4 z-50 ${isOpen ? "block" : "hidden"}`}
      >
        <div className="bg-white rounded-lg shadow-xl border max-w-sm">
          <div className="p-4 border-b flex justify-between items-center">
            <h3 className="font-semibold text-gray-800">Chatwoot –¢–µ—Å—Ç</h3>
            <button
              onClick={onToggle}
              className="text-gray-500 hover:text-gray-700"
            >
              ‚úï
            </button>
          </div>
          <div className="p-4">
            <div
              className={`p-3 mb-3 rounded text-sm ${
                status.type === "success"
                  ? "bg-green-100 text-green-800"
                  : status.type === "error"
                  ? "bg-red-100 text-red-800"
                  : "bg-blue-100 text-blue-800"
              }`}
            >
              {status.message}
            </div>
            <div className="space-y-2">
              <button
                className="w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded text-sm"
                onClick={testChatwootWidget}
              >
                Widget –Ω—ç—ç—Ö
              </button>
              <button
                className="w-full bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded text-sm"
                onClick={checkSDKStatus}
              >
                –°—Ç–∞—Ç—É—Å —à–∞–ª–≥–∞—Ö
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –ê–Ω—Ö–Ω—ã –±“Ø—Ç—ç–Ω —Ç–µ—Å—Ç —Ö—É—É–¥–∞—Å
  return (
    <div className="max-w-4xl mx-auto p-5 bg-gray-50 min-h-screen">
      <div className="bg-white p-8 rounded-lg shadow-lg">
        <h1 className="text-3xl font-bold mb-6 text-gray-800">
          ü§ñ Chatwoot –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏ –¢–µ—Å—Ç
        </h1>

        <div
          className={`p-4 mb-4 rounded-lg border-l-4 ${
            status.type === "success"
              ? "border-green-500 bg-green-50 text-green-800"
              : status.type === "error"
              ? "border-red-500 bg-red-50 text-red-800"
              : "border-blue-500 bg-blue-50 text-blue-800"
          }`}
        >
          {status.message}
        </div>

        <h2 className="text-xl font-semibold mb-4 text-gray-700">
          –¢–µ—Å—Ç —Ç–æ–≤—á–Ω—É—É–¥:
        </h2>
        <div className="space-y-3 mb-6">
          <button
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors"
            onClick={testChatwootWidget}
          >
            Chatwoot Widget –Ω—ç—ç—Ö
          </button>

          <button
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors ml-3"
            onClick={testWithCustomData}
          >
            Custom Data-—Ç–∞–π –Ω—ç—ç—Ö
          </button>

          <button
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors ml-3"
            onClick={checkSDKStatus}
          >
            SDK —Å—Ç–∞—Ç—É—Å —à–∞–ª–≥–∞—Ö
          </button>
        </div>

        <h2 className="text-xl font-semibold mb-4 text-gray-700">
          –¢–æ—Ö–∏—Ä–≥–æ–æ–Ω—ã –º—ç–¥—ç—ç–ª—ç–ª:
        </h2>
        <ul className="list-disc list-inside mb-6 space-y-2 text-gray-600">
          <li>
            <strong>Website Token:</strong> atrhYjQJmaBw5vCLzm5yTkHN
          </li>
          <li>
            <strong>Base URL:</strong> https://app.chatwoot.com
          </li>
          <li>
            <strong>SDK Path:</strong> /packs/js/sdk.js
          </li>
        </ul>

        <h2 className="text-xl font-semibold mb-4 text-gray-700">
          –¢–µ—Å—Ç —Ö–∏–π—Ö –∑–∞–∞–≤–∞—Ä:
        </h2>
        <ol className="list-decimal list-inside space-y-2 text-gray-600">
          <li>
            –≠–Ω—ç —Ö—É—É–¥–∞—Å –∞—á–∞–∞–ª–∞–≥–¥—Å–∞–Ω—ã –¥–∞—Ä–∞–∞ Chatwoot SDK –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä –∞—á–∞–∞–ª–∞–≥–¥–∞–Ω–∞
          </li>
          <li>
            "Chatwoot Widget –Ω—ç—ç—Ö" —Ç–æ–≤—á–∏–π–≥ –¥–∞—Ä–∂ widget –Ω—ç—ç–≥–¥—ç—Ö —ç—Å—ç—Ö–∏–π–≥ —à–∞–ª–≥–∞–Ω–∞
            —É—É
          </li>
          <li>Widget –¥—ç—ç—Ä –º–µ—Å—Å–µ–∂ –∏–ª–≥—ç—ç–∂ “Ø–∑–Ω—ç “Ø“Ø</li>
          <li>Chatwoot dashboard-–¥ –æ—Ä–∂ –º–µ—Å—Å–µ–∂ –∏—Ä—Å—ç–Ω —ç—Å—ç—Ö–∏–π–≥ —à–∞–ª–≥–∞–Ω–∞ —É—É</li>
        </ol>
      </div>
    </div>
  );
};

// Named export –±–æ–ª–æ–Ω default export —Ö–æ—ë—É–ª–∞–Ω–≥ –Ω—å —Ö–∏–π—Ö
export { ChatwootWidget };
export default ChatwootWidget;
